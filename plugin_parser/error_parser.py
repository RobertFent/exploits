USER_MADE = 'user_plugin.py'
LOADED = 'loaded_user_plugin.py'

def handle_exception(ex: Exception):
    print('Exception caught in file %s !' % __file__)
    print('Exception type %s' % type(ex).__name__)
    print('Exception message %s' % ex.__str__())
    print('Exception occurred in line %s' % str(ex.__traceback__.tb_lineno))

try:
    exec(open(USER_MADE).read())
except Exception as ex:
        # prints line above :( 
        # print('OG Exception occurred in line %s' % str(ex.__traceback__.tb_lineno))
        # todo replace with generic line
        ex_line_no = 2
        print('OG Exception occurred in line %s' % str(ex_line_no))
        # load file and split into lines
        file_lines = open(LOADED).read().split('\n')
        # remove whitespaces from current file
        parsed_file_lines = []
        for i in file_lines:
            j = i.replace(' ', '')
            parsed_file_lines.append(j)
            
        print(parsed_file_lines)
        error_line = file_lines[ex_line_no-1]

        user_file_lines = open(USER_MADE).read().split('\n')
        
        # representing line number where error occurred
        counter = 1
        user_file_line_no = 0

        # iterate over each line
        for line in user_file_lines:
            if line == error_line:
                user_file_line_no = counter
            counter += 1

        print(user_file_line_no)

# generic approach

try:
    print('stuff')
except Exception as ex:
    split_file_name = __file__.split('/')
    parsed_file_name = '%s/%s' % (split_file_name[:len(split_file_name)-2], '/plugin_folder/plugin_name.py')
    print('Exception caught in file %s !' % parsed_file_name)
    print('Exception type %s' % type(ex).__name__)
    print('Exception message %s' % ex.__str__())

    # code below is for retrieving line number from user file where the error occurred
    og_line = ex.__traceback__.tb_lineno
    user_code_line = 0
        
    # load current file and split into lines
    file_lines = open(__file__).read().split('\n')

    # remove whitespaces from current loaded file
    parsed_file_lines = []
    for i in file_lines:
        j = i.replace(' ', '')
        parsed_file_lines.append(j)
    
    # get line in current file where error occurred
    error_line = parsed_file_lines[ex_line_no-1]

    # load user generated file where we want the line number
    user_file_lines = open(parsed_file_name).read().split('\n')
        
    # representing current line number while iterating over user made file
    counter = 1

    # iterate over each line
    for line in user_file_lines:
        if line == error_line:
            user_code_line = counter
        counter += 1
    # code for paring done

    print('Exception occurred in line %s' % str(user_code_line))