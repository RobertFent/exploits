// C++ program to illustrate 
// the SIGSEGV error 
#include <stdio.h>
#include <stdlib.h>
#include <iostream>

using namespace std; 
  
// Function with infinite 
// Recursion 
void infiniteRecur(int a) 
{ 
    return infiniteRecur(a); 
}

// Addressing address that is being freed
// not working
void accessFreedAddress()
{
    // allocating memory to p
    int* p = (int*) malloc(8);
    *p = 100;
     
    // deallocated the space allocated to p
    free(p);
     
    // core dump/segmentation fault
    //  as now this statement is illegal
    *p = 110;
}

// stack smashing detected: terminated
// [1]    1492 abort      ./compiled_code/sigsegv
void accessArrayOutOfBounds()
{
    int arr[2];
    arr[3] = 10;  // Accessing out of bound
}

// not working
void derefUninitPointer()
{
    cout << "deref example";
    int* p;
    cout << *p;
}
  
// Driver Code 
int main() 
{ 
  
    // Infinite Recursion 
    infiniteRecur(5);
    // accessFreedAddress(); 
    // accessArrayOutOfBounds();
    // derefUninitPointer();
}